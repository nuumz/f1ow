// ===== DASHBOARD STYLES =====

@use 'sass:map';
@use 'variables' as *;
@use 'functions' as *;

// Metrics Animation Keyframes
@keyframes metricPulse {
  0% { 
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    transform: scale(1);
  }
  50% { 
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
    transform: scale(1.01);
  }
  100% { 
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    transform: scale(1);
  }
}

@keyframes slideUpFadeIn {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInTooltip {
  0% {
    opacity: 0;
    transform: translateX(-50%) translateY(4px);
  }
  100% {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
  }
}

@keyframes barGrow {
  0% {
    height: 0;
    opacity: 0.8;
  }
  100% {
    height: var(--bar-height);
    opacity: 1;
  }
}

.dashboard {
  padding: spacing(4);
  max-width: 1280px;
  margin: 0 auto;
  width: 100%;
  height: 100%;
  min-height: 100%;
  box-sizing: border-box;
  background: color(bg-light);
  font-family: $font-family-base;
  @include flex-column;

  @include respond-to(md) {
    padding: spacing(3);
  }
}

// Dashboard Loading
.dashboard-loading {
  @include flex-column;
  @include flex-center;
  flex: 1;
  min-height: 300px;
  gap: spacing(4);
  padding: spacing(8);
}

.error-state {
  @include flex-column;
  @include flex-center;
  flex: 1;
  min-height: 300px;
  gap: spacing(4);
  padding: spacing(8);
  text-align: center;

  .error-icon {
    color: color(danger);
    margin-bottom: spacing(2);
  }

  h3 {
    margin: 0 0 spacing(2) 0;
    color: color(text-dark);
    font-size: font-size(lg);
    font-weight: font-weight(semibold);
  }

  p {
    margin: 0 0 spacing(4) 0;
    color: color(text-light);
    font-size: font-size(sm);
  }
}

// Dashboard Content - main content area
.dashboard-content {
  flex: 1;
  @include flex-column;
  gap: spacing(6);
}

// Dashboard Header
.dashboard-header {
  margin-bottom: spacing(4);
  @include flex-between;
  flex-wrap: wrap;
  gap: spacing(4);
  padding: 0 spacing(1);
  flex-shrink: 0;

  @include respond-to(md) {
    .dashboard-header h1 {
      font-size: font-size(2xl);
    }
  }
}

.header-content {
  flex: 1;
  min-width: 300px;

  h1 {
    margin: 0 0 spacing(2) 0;
    font-size: font-size(3xl);
    font-weight: font-weight(bold);
    color: color(text-dark);
    line-height: line-height(tight);
  }

  p {
    margin: 0;
    color: color(text-light);
    font-size: font-size(base);
  }
}

.last-updated {
  margin: spacing(1) 0 0 0;
  color: color(text-light);
  font-size: font-size(xs);
  font-weight: font-weight(normal);
}

.header-actions {
  @include flex-center;
  gap: spacing(3);
  flex-shrink: 0;

  @include respond-to(md) {
    gap: spacing(2);
    
    .btn {
      padding: spacing(2) spacing(3);
      font-size: font-size(sm);
    }
  }
}

// Metrics Grid - Enhanced with better spacing and responsive design
.metrics-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: spacing(5);
  margin-bottom: spacing(8);

  @include respond-to(xl) {
    grid-template-columns: repeat(4, 1fr);
    gap: spacing(4);
  }

  @include respond-to(lg) {
    grid-template-columns: repeat(2, 1fr);
    gap: spacing(4);
  }

  @include respond-to(md) {
    grid-template-columns: repeat(2, 1fr);
    gap: spacing(3);
    margin-bottom: spacing(6);
  }

  @include respond-to(sm) {
    grid-template-columns: 1fr;
    gap: spacing(3);
  }

  // Ensure equal height cards
  .metric-card {
    height: 100%;
    min-height: 120px;
  }

  // Staggered animation for cards
  .metric-card {
    animation: slideUpFadeIn 0.6s ease-out forwards;
    opacity: 0;

    &:nth-child(1) { animation-delay: 0.1s; }
    &:nth-child(2) { animation-delay: 0.2s; }
    &:nth-child(3) { animation-delay: 0.3s; }
    &:nth-child(4) { animation-delay: 0.4s; }
  }
}

// Metric Cards - Enhanced glass morphism design
.metric-card {
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.95) 0%, 
    rgba(248, 250, 252, 0.98) 100%);
  backdrop-filter: blur(10px);
  padding: spacing(4) spacing(5);
  border-radius: border-radius(xl);
  border: 1px solid rgba(226, 232, 240, 0.8);
  @include flex-start;
  align-items: center;
  gap: spacing(4);
  transition: all transition(base);
  box-shadow: 
    0 4px 20px rgba(0, 0, 0, 0.08),
    0 1px 3px rgba(0, 0, 0, 0.05),
    inset 0 1px 0 rgba(255, 255, 255, 0.9);
  position: relative;
  overflow: hidden;
  height: 100%;
  min-height: 120px;

  // Subtle gradient overlay
  &::before {
    content: '';
    @include absolute(0, 0, 0, 0);
    background: linear-gradient(135deg, 
      color-mix(in srgb, var(--metric-color, #{color(slate-500)}) 5%, transparent) 0%,
      transparent 50%);
    pointer-events: none;
    opacity: 0;
    transition: opacity transition(base);
  }

  &:hover {
    transform: translateY(-4px) scale(1.02);
    box-shadow: 
      0 12px 40px rgba(0, 0, 0, 0.12),
      0 4px 16px rgba(0, 0, 0, 0.08),
      inset 0 1px 0 rgba(255, 255, 255, 0.95);
    border-color: color-mix(in srgb, var(--metric-color, #{color(slate-300)}) 30%, transparent);
    
    &::before {
      opacity: 1;
    }

    .metric-icon {
      transform: scale(1.1) rotate(5deg);
      box-shadow: 
        0 8px 25px color-mix(in srgb, var(--metric-color, #{color(slate-500)}) 20%, transparent),
        0 3px 10px color-mix(in srgb, var(--metric-color, #{color(slate-500)}) 10%, transparent);
    }

    .metric-value {
      color: var(--metric-color, #{color(text-dark)});
    }
  }

  @include respond-to(md) {
    padding: spacing(3) spacing(4);
    gap: spacing(3);
    min-height: 100px;
  }

  @include respond-to(sm) {
    flex-direction: row;
    align-items: center;
    min-height: 80px;
    padding: spacing(3);
  }

  // Enhanced color variants with better contrast
  &.primary {
    --metric-color: #{color(primary)};
    border-color: color-mix(in srgb, #{color(primary)} 20%, transparent);
  }

  &.success {
    --metric-color: #{color(success)};
    border-color: color-mix(in srgb, #{color(success)} 20%, transparent);
  }

  &.info {
    --metric-color: #{color(info)};
    border-color: color-mix(in srgb, #{color(info)} 20%, transparent);
  }

  &.warning {
    --metric-color: #{color(warning)};
    border-color: color-mix(in srgb, #{color(warning)} 20%, transparent);
  }
}

// Metric Icons - Styled like BaseNodePalette node icons
.metric-icon {
  width: 56px;
  height: 56px;
  border-radius: border-radius(lg);
  @include flex-center;
  flex-shrink: 0;
  background: color-mix(in srgb, var(--metric-color, #{color(slate-500)}) 10%, transparent);
  color: var(--metric-color, #{color(slate-500)});
  transition: transition(base);
  box-shadow: 
    0 2px 8px color-mix(in srgb, var(--metric-color, #{color(slate-500)}) 8%, transparent),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);

  .metric-card:hover & {
    background: color-mix(in srgb, var(--metric-color, #{color(slate-500)}) 15%, transparent);
    transform: scale(1.05);
  }

  svg {
    width: 28px;
    height: 28px;
  }

  @include respond-to(md) {
    width: 48px;
    height: 48px;
    
    svg {
      width: 24px;
      height: 24px;
    }
  }

  @include respond-to(sm) {
    width: 44px;
    height: 44px;
    
    svg {
      width: 22px;
      height: 22px;
    }
  }
}

// Metric Content
.metric-content {
  flex: 1;
  min-width: 0;
}

.metric-value {
  font-size: font-size(2xl);
  font-weight: font-weight(bold);
  color: color(text-dark);
  margin-bottom: spacing(1);
  line-height: line-height(tight);
  transition: color transition(base);

  @include respond-to(md) {
    font-size: font-size(xl);
  }
}

.metric-label {
  font-size: font-size(sm);
  color: color(text-light);
  margin-bottom: spacing(2);
  font-weight: font-weight(medium);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.metric-change {
  @include flex-center;
  gap: spacing(1);
  font-size: font-size(xs);
  font-weight: font-weight(medium);
  padding: spacing(1) spacing(2);
  border-radius: border-radius(full);
  width: fit-content;

  &.positive {
    color: color(success-dark);
    background: color-mix(in srgb, #{color(success)} 10%, transparent);
  }

  &.negative {
    color: color(danger-dark);
    background: color-mix(in srgb, #{color(danger)} 10%, transparent);
  }

  svg {
    width: 12px;
    height: 12px;
  }
}

// Status Overview Section
.status-overview {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
  gap: spacing(6);

  @include respond-to(md) {
    grid-template-columns: 1fr;
    gap: spacing(4);
  }
}

.overview-card {
  @include card(spacing(6));
  border-radius: border-radius(lg);
  border: 1px solid color(slate-200);
  box-shadow: 
    shadow(sm),
    inset 0 1px 0 rgba(255, 255, 255, 0.9);
  transition: transition(bounce);

  &:hover {
    box-shadow: 
      shadow(sm),
      inset 0 1px 0 rgba(255, 255, 255, 0.9);
    border-color: color(slate-300);
  }

  h3 {
    margin: 0 0 spacing(6) 0;
    font-size: font-size(lg);
    font-weight: font-weight(semibold);
    color: color(text-dark);
    @include flex-start;
    gap: spacing(2);

    &:before {
      content: '';
      width: 4px;
      height: 20px;
      background: linear-gradient(135deg, color(primary), color(primary-darker));
      border-radius: border-radius(sm);
    }
  }
}

// Status Grid
.status-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
  gap: spacing(4);
}

%status-item-base {
  @include flex-center;
  gap: spacing(3);
  padding: spacing(4);
  @include glass-morphism(0.9, 8px);
  border-radius: border-radius(md);
  border: 1px solid color(slate-200);
  transition: transition(bounce);
  cursor: pointer;
  position: relative;
  overflow: hidden;

  &:hover {
    transform: translateY(-2px);
    box-shadow: shadow(md);
    border-color: color(slate-300);
  }
}

.status-item--running {
  @extend %status-item-base;
}

.status-item--completed {
  @extend %status-item-base;
}

.status-item--failed {
  @extend %status-item-base;
}

.workflow-status__indicator {
  width: $status-indicator-size;
  height: $status-indicator-size;
  border-radius: border-radius(full);
  background: color(gray-300);
  flex-shrink: 0;
  position: relative;
  overflow: hidden;
  box-shadow: shadow(sm);

  &::before {
    content: '';
    @include absolute(0, null, null, 0);
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(255,255,255,0.3), rgba(255,255,255,0));
    pointer-events: none;
  }
}

.status-item--running .workflow-status__indicator {
  background: linear-gradient(135deg, color(warning-light), color(warning-lighter));
  @include pulse(color(warning));
}

.status-item--completed .workflow-status__indicator {
  background: linear-gradient(135deg, color(success-light), color(success-lighter));
}

.status-item--failed .workflow-status__indicator {
  background: linear-gradient(135deg, color(danger-light), color(danger-lighter));
}

.status-content {
  @include flex-column;
  align-items: flex-start;
}

.status-count {
  font-size: font-size(3xl);
  font-weight: font-weight(bold);
  color: color(text-dark);
  line-height: line-height(tight);
  margin-bottom: spacing(1);
}

.status-label {
  font-size: font-size(xs);
  color: color(text-light);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  font-weight: font-weight(medium);
}

// Health Indicators
.health-indicators {
  @include flex-column;
  gap: spacing(4);
}

.health-item {
  @include flex-between;
}

.health-label {
  font-weight: font-weight(medium);
  color: color(text-primary);
  font-size: font-size(sm);
}

.health-bar {
  flex: 1;
  height: 10px;
  background: color(slate-100);
  border-radius: border-radius(base);
  margin: 0 spacing(4);
  overflow: hidden;
  border: 1px solid color(slate-200);
  position: relative;
}

.health-fill {
  height: 100%;
  transition: width transition(slow);
  background: color(gray-500);
  border-radius: border-radius(sm);
  position: relative;

  &.success {
    background: linear-gradient(90deg, color(success-light), color(success-lighter));
  }

  &.info {
    background: linear-gradient(90deg, color(info-light), color(info-lighter));
  }

  &.warning {
    background: linear-gradient(90deg, color(warning-light), color(warning-lighter));
  }
}

.health-value {
  font-weight: font-weight(semibold);
  color: color(text-primary);
  font-size: font-size(sm);
  min-width: 40px;
  text-align: right;
}

// Charts Section
.charts-section {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  gap: spacing(6);

  @include respond-to(md) {
    grid-template-columns: 1fr;
  }
}

.chart-card {
  @include card(spacing(6));
  transition: all transition(base);
  box-shadow: 
    0 4px 20px rgba(0, 0, 0, 0.08),
    0 1px 3px rgba(0, 0, 0, 0.05);
  border: 1px solid rgba(226, 232, 240, 0.8);
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.95) 0%, 
    rgba(248, 250, 252, 0.98) 100%);
  position: relative;
  overflow: hidden;
  padding: spacing(4);
  min-height: 400px;
  display: flex;
  flex-direction: column;

  // Subtle animated background
  &::before {
    content: '';
    @include absolute(0, 0, 0, 0);
    background: linear-gradient(135deg, 
      rgba(color(primary), 0.02) 0%, 
      transparent 50%);
    opacity: 0;
    transition: opacity transition(base);
  }

  &:hover {
    border-color: rgba(color(primary), 0.2);
    
    &::before {
      opacity: 1;
    }
  }

  // For modern chart cards
  &.modern-chart {
    padding: spacing(4);
    min-height: 400px;

    .chart-header {
      margin-bottom: spacing(4);
      padding-bottom: spacing(3);
      border-bottom: 1px solid rgba(226, 232, 240, 0.6);
      
      h3 {
        font-size: font-size(2xl);
        font-weight: font-weight(bold);
        color: color(text-dark);
        margin: 0 0 spacing(2) 0;
        line-height: line-height(tight);
        white-space: nowrap;
      }

      .chart-subtitle {
        font-size: font-size(base);
        color: color(text-light);
        margin: 0 0 0 1rem;
        line-height: line-height(relaxed);
        letter-spacing: 0.2px;
      }
    }
  }
}

.chart-header {
  @include flex-between;
  align-items: flex-start;
  margin-bottom: spacing(4);
  padding-bottom: spacing(3);
  border-bottom: 1px solid rgba(226, 232, 240, 0.6);

  h3 {
    margin: 0 0 spacing(1) 0;
    font-size: font-size(2xl);
    font-weight: font-weight(bold);
    color: color(text-dark);
    line-height: line-height(tight);
    white-space: nowrap;
  }
}

.chart-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  height: 100%;
  min-height: 320px;
}

.chart-legend {
  @include flex-center;
  gap: spacing(6);
  padding: spacing(2) spacing(4);
  background: rgba(248, 250, 252, 0.8);
  border-radius: border-radius(full);
  border: 1px solid rgba(226, 232, 240, 0.6);
}

.legend-item {
  @include flex-center;
  gap: spacing(2);
  font-size: font-size(sm);
  font-weight: font-weight(medium);
  padding: spacing(1) spacing(2);
  border-radius: border-radius(sm);
  transition: all transition(base);
  cursor: pointer;

  &:hover {
    background: rgba(255, 255, 255, 0.8);
    transform: translateY(-1px);
  }

  .legend-color {
    width: 14px;
    height: 14px;
    border-radius: border-radius(full);
    flex-shrink: 0;
    position: relative;
    overflow: hidden;
    box-shadow: shadow(sm);

    // Same glossy effect as workflow-status__indicator
    &::before {
      content: '';
      @include absolute(0, null, null, 0);
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, rgba(255,255,255,0.3), rgba(255,255,255,0));
      pointer-events: none;
    }

    &.success {
      background: linear-gradient(135deg, color(success-light), color(success-lighter));
    }

    &.failed {
      background: linear-gradient(135deg, color(danger-light), color(danger-lighter));
    }
  }
}

.chart-filter {
  padding: spacing(2);
  border: 1px solid color(border-color);
  border-radius: border-radius(sm);
  background: white;
  font-size: font-size(sm);
}

// Modern Chart Container - Dynatrace Style
.modern-chart-container {
  position: relative;
  height: 320px;
  padding: spacing(4);
  background: linear-gradient(180deg, 
    rgba(248, 250, 252, 0.95) 0%, 
    rgba(255, 255, 255, 0.98) 100%);
  border-radius: border-radius(lg);
  border: 1px solid rgba(226, 232, 240, 0.8);
  overflow: hidden;

  // Chart canvas
  canvas {
    width: 100% !important;
    height: 100% !important;
  }

  // Chart overlay for gradients
  &::before {
    content: '';
    @include absolute(0, 0, 0, 0);
    background: linear-gradient(180deg, 
      rgba(color(primary), 0.02) 0%, 
      transparent 30%);
    pointer-events: none;
    z-index: 1;
  }
}

// Chart Legend - Dynatrace Style
.modern-chart-legend {
  @include flex-center;
  gap: spacing(4);
  padding: spacing(1);
  backdrop-filter: blur(8px);

  .legend-item {
    @include flex-center;
    gap: spacing(2);
    font-size: font-size(sm);
    font-weight: font-weight(medium);
    padding: spacing(1) spacing(3);
    border-radius: border-radius(full);
    transition: all transition(base);
    cursor: pointer;
    position: relative;

    &:hover {
      background: rgba(255, 255, 255, 0.9);
      transform: translateY(-1px);
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .legend-indicator {
      width: 12px;
      height: 12px;
      border-radius: border-radius(full);
      position: relative;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);

      &::before {
        content: '';
        @include absolute(1px, 1px, 1px, 1px);
        background: rgba(255, 255, 255, 0.4);
        border-radius: border-radius(full);
      }

      &.success {
        background: linear-gradient(135deg, rgba(208, 215, 229, 0.8), rgba(208, 215, 229, 1));
      }

      &.failed {
        background: linear-gradient(135deg, rgba(220, 38, 38, 1), rgba(185, 28, 28, 1));
      }

      &.rate {
        background: linear-gradient(135deg, rgba(59, 130, 246, 1), rgba(37, 99, 235, 1));
      }

      &.requests {
        background: linear-gradient(135deg, rgba(226, 232, 240, 1), rgba(203, 213, 225, 1));
      }
    }
  }
}

// Chart Filters - Dynatrace Style
.chart-filters {
  @include flex-between;
  align-items: center;
  margin-bottom: spacing(4);
  padding: spacing(1) spacing(2);
  background: rgba(248, 250, 252, 0.8);
  border-radius: border-radius(md);
  border: 1px solid rgba(226, 232, 240, 0.6);

  .filter-group {
    @include flex-center;
    gap: spacing(2);

    .filter-btn {
      padding: spacing(2) spacing(4);
      border: 1px solid rgba(226, 232, 240, 0.8);
      border-radius: border-radius(sm);
      background: rgba(255, 255, 255, 0.9);
      color: color(text-secondary);
      font-size: font-size(sm);
      font-weight: font-weight(medium);
      cursor: pointer;
      transition: all transition(base);

      &:hover {
        background: rgba(color(primary), 0.1);
        border-color: rgba(color(primary), 0.3);
        color: color(primary);
      }

      &.active {
        background: color(primary);
        border-color: color(primary);
        color: white;
        box-shadow: 0 2px 4px rgba(color(primary), 0.3);
      }
    }
  }

  .time-range {
    font-size: font-size(base);
    color: color(text-primary);
    font-weight: font-weight(semibold);
    padding: spacing(1) spacing(3);
    background: rgba(255, 255, 255, 0.9);
    border-radius: border-radius(sm);
    border: 1px solid rgba(226, 232, 240, 0.6);
  }
}

// Fallback Simple Chart (for when Chart.js is not available)
.simple-chart {
  @include flex-center;
  justify-content: space-between;
  height: 240px;
  gap: spacing(2);
  padding: spacing(4) spacing(2);
  background: linear-gradient(180deg, 
    rgba(248, 250, 252, 0.8) 0%, 
    rgba(255, 255, 255, 0.9) 100%);
  border-radius: border-radius(md);
  position: relative;

  // Grid lines for better readability
  &::before {
    content: '';
    @include absolute(spacing(4), spacing(2), spacing(6), spacing(2));
    background-image: 
      linear-gradient(to right, rgba(226, 232, 240, 0.6) 1px, transparent 1px),
      linear-gradient(to top, rgba(226, 232, 240, 0.6) 1px, transparent 1px);
    background-size: 20px 20px;
    pointer-events: none;
    opacity: 0.7;
  }
}

// Chart.js Custom Styling
.chart-container {
  position: relative;

  // Custom tooltip styling
  .chartjs-tooltip {
    background: rgba(0, 0, 0, 0.9);
    backdrop-filter: blur(8px);
    border-radius: border-radius(md);
    border: 1px solid rgba(255, 255, 255, 0.1);
    color: white;
    font-size: font-size(sm);
    font-weight: font-weight(medium);
    padding: spacing(3);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    opacity: 0;
    pointer-events: none;
    position: absolute;
    transition: all transition(base);
    z-index: 1000;

    &.active {
      opacity: 1;
    }

    .tooltip-title {
      border-bottom: 1px solid rgba(255, 255, 255, 0.2);
      margin-bottom: spacing(2);
      padding-bottom: spacing(1);
      font-weight: font-weight(semibold);
    }

    .tooltip-body {
      .tooltip-item {
        @include flex-between;
        margin-bottom: spacing(1);

        .label {
          @include flex-center;
          gap: spacing(1);

          .color-box {
            width: 8px;
            height: 8px;
            border-radius: border-radius(xs);
          }
        }

        .value {
          font-weight: font-weight(bold);
        }
      }
    }
  }
}

// Chart Performance Enhancements
.chart-performance-overlay {
  @include absolute(0, 0, 0, 0);
  pointer-events: none;
  z-index: 10;

  // Loading state
  &.loading {
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(4px);

    &::after {
      content: '';
      @include absolute(50%, 50%, null, null);
      transform: translate(-50%, -50%);
      width: 32px;
      height: 32px;
      border: 3px solid rgba(color(primary), 0.3);
      border-top-color: color(primary);
      border-radius: border-radius(full);
      animation: spin 1s linear infinite;
    }
  }
}

@keyframes spin {
  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

.bar {
  width: 32px;
  border-radius: border-radius(sm) border-radius(sm) 0 0;
  transition: all transition(smooth);
  position: relative;
  overflow: hidden;
  cursor: pointer;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);

  // Glossy effect
  &::before {
    content: '';
    @include absolute(0, 0, null, 0);
    height: 40%;
    background: linear-gradient(180deg, 
      rgba(255, 255, 255, 0.3) 0%, 
      rgba(255, 255, 255, 0.1) 70%,
      transparent 100%);
    pointer-events: none;
  }

  // Pulse animation for active state
  &:hover {
    box-shadow: 
      0 4px 16px rgba(0, 0, 0, 0.15),
      0 0 0 2px rgba(255, 255, 255, 0.8);
  }

  &.success {
    background: linear-gradient(to top, 
      #{color(success-dark)} 0%,
      #{color(success)} 70%,
      #{color(success-light)} 100%);
    
    &:hover {
      box-shadow: 
        0 4px 16px rgba(color(success), 0.3),
        0 0 0 2px rgba(255, 255, 255, 0.8);
    }
  }

  &.failed {
    background: linear-gradient(to top,
      #{color(danger-dark)} 0%,
      #{color(danger)} 70%, 
      #{color(danger-light)} 100%);
    
    &:hover {
      box-shadow: 
        0 4px 16px rgba(color(danger), 0.3),
        0 0 0 2px rgba(255, 255, 255, 0.8);
    }
  }
}

.bar-label {
  font-size: font-size(xs);
  color: color(text-secondary);
  text-align: center;
  font-weight: font-weight(medium);
  transition: all transition(base);
  padding: spacing(1);
  border-radius: border-radius(sm);
  min-width: 40px;
  
  &:hover {
    background: rgba(color(primary), 0.1);
    color: color(primary);
  }
}

// Performance Metrics
.performance-metrics {
  @include flex-column;
  gap: spacing(4);
  height: 100%;
  justify-content: space-between;
  min-height: 320px; // Ensure minimum content height
}

.metric-item {
  @include flex-center;
  gap: spacing(4);
  padding: spacing(5);
  background: color(bg-light);
  border-radius: border-radius(md);
  transition: transition(base);
  flex: 1;
  border: 1px solid rgba(226, 232, 240, 0.5);

  &:hover {
    background: color(slate-50);
    border-color: rgba(color(primary), 0.3);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  }
}

.performance-metric-icon {
  color: color(primary);
  flex-shrink: 0;
}

.metric-details {
  flex: 1;
  @include flex-column;
  gap: spacing(1);
}

.metric-title {
  font-size: font-size(sm);
  font-weight: font-weight(medium);
  color: color(text-primary);
}

.metric-value {
  font-size: font-size(lg);
  font-weight: font-weight(bold);
  color: color(text-dark);
}

.metric-trend {
  font-size: font-size(xs);
  font-weight: font-weight(medium);

  &.positive {
    color: color(success);
  }

  &.negative {
    color: color(danger);
  }

  &.neutral {
    color: color(text-secondary);
  }
}

// Recent Activity
.recent-activity {
  background: white;
  border-radius: border-radius(lg);
  border: 1px solid color(border-color);
  overflow: hidden;
  box-shadow: shadow(sm);
}

.activity-header {
  @include flex-between;
  padding: spacing(6);
  background: color(bg-light);
  border-bottom: 1px solid color(border-color);

  h3 {
    margin: 0;
    font-size: font-size(lg);
    font-weight: font-weight(semibold);
    color: color(text-dark);
  }
}

.activity-list {
  @include flex-column;
}

.activity-item {
  @include flex-center;
  gap: spacing(4);
  padding: spacing(4) spacing(6);
  border-bottom: 1px solid color(border-light);
  transition: transition(base);

  &:last-child {
    border-bottom: none;
  }

  &:hover {
    background: color(bg-light);
  }
}

.activity-icon {
  width: 32px;
  height: 32px;
  border-radius: border-radius(full);
  @include flex-center;
  flex-shrink: 0;

  &.success {
    background: rgba(color(success), 0.1);
    color: color(success);
  }

  &.info {
    background: rgba(color(info), 0.1);
    color: color(info);
  }

  &.failed {
    background: rgba(color(danger), 0.1);
    color: color(danger);
  }
}

.activity-content {
  flex: 1;
  @include flex-column;
  gap: spacing(1);
}

.activity-title {
  font-size: font-size(sm);
  font-weight: font-weight(medium);
  color: color(text-primary);
}

.activity-time {
  font-size: font-size(xs);
  color: color(text-secondary);
}

// Dashboard Footer (Legacy - kept for backward compatibility)
.dashboard-footer {
  margin-top: spacing(8);
  background: linear-gradient(135deg, 
    rgba(248, 250, 252, 0.95) 0%, 
    rgba(255, 255, 255, 0.98) 100%);
  border-top: 1px solid rgba(226, 232, 240, 0.8);
  border-radius: border-radius(lg) border-radius(lg) 0 0;
  overflow: hidden;
}

// App Footer - Common Footer System
.app-footer {
  margin-top: spacing(8);
  background: linear-gradient(135deg, 
    rgba(248, 250, 252, 0.95) 0%, 
    rgba(255, 255, 255, 0.98) 100%);
  border-top: 1px solid rgba(226, 232, 240, 0.8);
  overflow: hidden;

  // Minimal variant for pages like designer
  &--minimal {
    margin-top: spacing(4);
    background: rgba(248, 250, 252, 0.8);
    border-top: 1px solid rgba(226, 232, 240, 0.5);

    .footer-minimal-content {
      @include flex-between;
      align-items: center;
      padding: spacing(3) spacing(6);

      @include respond-to(md) {
        flex-direction: column;
        gap: spacing(2);
        text-align: center;
      }

      p {
        font-size: font-size(sm);
        color: color(text-secondary);
        margin: 0;
      }
    }

    .footer-minimal-meta {
      font-size: font-size(xs);
      color: color(text-light);
    }
  }

  // Dashboard variant with stats
  &--dashboard {
    border-radius: border-radius(lg) border-radius(lg) 0 0;
  }

  // Full variant for regular pages
  &--full {
    border-radius: 0;
  }
}

.footer-content {
  display: grid;
  grid-template-columns: 1fr 2fr 1fr;
  gap: spacing(8);
  padding: spacing(8) spacing(6);
  
  @include respond-to(lg) {
    grid-template-columns: 1fr;
    gap: spacing(6);
    text-align: center;
  }
}

.footer-left {
  @include flex-column;
  gap: spacing(3);
  
  .footer-brand {
    @include flex-center;
    gap: spacing(2);
    font-size: font-size(lg);
    font-weight: font-weight(bold);
    color: color(text-dark);
    margin-bottom: spacing(2);
    
    @include respond-to(lg) {
      justify-content: center;
    }
  }
  
  .footer-description {
    font-size: font-size(sm);
    color: color(text-secondary);
    line-height: line-height(relaxed);
    margin: 0;
    max-width: 280px;
    
    @include respond-to(lg) {
      max-width: none;
    }
  }
}

.footer-center {
  @include flex-center;
  justify-content: center;
  
  @include respond-to(lg) {
    justify-content: center;
  }
}

.footer-links {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: spacing(8);
  
  @include respond-to(md) {
    grid-template-columns: 1fr;
    gap: spacing(6);
  }
}

.footer-section {
  @include flex-column;
  gap: spacing(3);
  
  h4 {
    font-size: font-size(sm);
    font-weight: font-weight(semibold);
    color: color(text-dark);
    margin: 0 0 spacing(2) 0;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  ul {
    @include flex-column;
    gap: spacing(2);
    list-style: none;
    margin: 0;
    padding: 0;
  }
  
  li a {
    font-size: font-size(sm);
    color: color(text-secondary);
    text-decoration: none;
    transition: color transition(base);
    
    &:hover {
      color: color(primary);
    }
  }
}

.footer-right {
  @include flex-column;
  gap: spacing(4);
  align-items: flex-end;
  
  @include respond-to(lg) {
    align-items: center;
  }
}

.footer-stats {
  @include flex-column;
  gap: spacing(4);
  
  .stat-item {
    @include flex-column;
    gap: spacing(1);
    text-align: right;
    
    @include respond-to(lg) {
      text-align: center;
    }
    
    .stat-value {
      font-size: font-size(xl);
      font-weight: font-weight(bold);
      color: color(primary);
    }
    
    .stat-label {
      font-size: font-size(xs);
      color: color(text-secondary);
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
  }
}

.footer-bottom {
  background: rgba(248, 250, 252, 0.6);
  border-top: 1px solid rgba(226, 232, 240, 0.5);
  padding: spacing(4) spacing(6);
}

.footer-bottom-content {
  @include flex-between;
  align-items: center;
  
  @include respond-to(md) {
    flex-direction: column;
    gap: spacing(3);
    text-align: center;
  }
  
  p {
    font-size: font-size(sm);
    color: color(text-secondary);
    margin: 0;
  }
}

.footer-meta {
  @include flex-center;
  gap: spacing(2);
  font-size: font-size(xs);
  color: color(text-light);
  
  span {
    &:not(:last-child):after {
      content: '';
      display: none;
    }
  }
}